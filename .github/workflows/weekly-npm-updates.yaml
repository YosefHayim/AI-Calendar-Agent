name: Weekly NPM Updates

on:
  schedule:
    - cron: "0 3 * * 1"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  update-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect package manager (respect packageManager field)
        id: pm
        shell: bash
        run: |
          set -euo pipefail
          PM_FIELD="$(jq -r '.packageManager // ""' package.json || true)"
          if [ -n "$PM_FIELD" ] && [[ "$PM_FIELD" == *@* ]]; then
            PM_NAME="${PM_FIELD%@*}"
            PM_VER="${PM_FIELD#*@}"
          else
            if [ -f pnpm-lock.yaml ]; then PM_NAME="pnpm"; PM_VER="latest";
            elif [ -f yarn.lock ]; then PM_NAME="yarn"; PM_VER="stable";
            else PM_NAME="npm"; PM_VER=""; fi
          fi

          if [ "$PM_NAME" = "pnpm" ]; then
            LOCKFILE="pnpm-lock.yaml"
          elif [ "$PM_NAME" = "yarn" ]; then
            LOCKFILE="yarn.lock"
          else
            LOCKFILE="package-lock.json"
          fi

          if [ "$PM_NAME" = "pnpm" ] || [ "$PM_NAME" = "yarn" ]; then
            corepack enable
            corepack prepare "${PM_NAME}@${PM_VER:-latest}" --activate
          fi

          if [ "$PM_NAME" = "pnpm" ]; then
            DLX="pnpm dlx"
          elif [ "$PM_NAME" = "yarn" ]; then
            DLX="yarn dlx"
          else
            DLX="npx"
          fi

          {
            echo "pm=$PM_NAME"
            echo "pm_version=$PM_VER"
            echo "lockfile=$LOCKFILE"
            echo "dlx=$DLX"
          } >> "$GITHUB_OUTPUT"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.pm.outputs.pm }}
          cache-dependency-path: ${{ steps.pm.outputs.lockfile }}

      - name: Update dependencies (minor/patch only; block zod major)
        shell: bash
        run: |
          set -euo pipefail
          # Single ncu run to avoid unintended majors
          ${{
            steps.pm.outputs.dlx
          }} npm-check-updates@latest \
             -u --target minor \
             --reject 'zod'

          PM="${{ steps.pm.outputs.pm }}"
          if [ "$PM" = "pnpm" ]; then
            pnpm install --frozen-lockfile=false
          elif [ "$PM" = "yarn" ]; then
            yarn install
          else
            npm install
          fi

      - name: Run lint/tests if present
        shell: bash
        run: |
          PM="${{ steps.pm.outputs.pm }}"
          if [ "$PM" = "pnpm" ]; then
            pnpm -w -r run lint --if-present || true
            pnpm -w -r run test --if-present -- --ci || true
          elif [ "$PM" = "yarn" ]; then
            yarn run lint --if-present || true
            yarn run test --if-present --ci || true
          else
            npm run lint --if-present || true
            npm test --if-present -- --ci || true

      - name: Create PR with changes
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/weekly-npm-updates
          title: "chore: weekly dependency updates (minor/patch)"
          commit-message: "chore: weekly dependency updates (minor/patch)"
          body: |
            Automated weekly dependency refresh.

            - Used npm-check-updates with --target minor and --reject zod to avoid zod@4 while @openai/agents peers zod^3.
            - Respected the repo's packageManager via Corepack to prevent PM conflicts.
            - Installed with the detected package manager and updated the lockfile.
            - Lint/tests executed if available.
          labels: dependencies
          signoff: false
          delete-branch: true
